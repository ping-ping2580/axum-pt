import reactDebug from 'eslint-plugin-react-debug';
import reactDom from 'eslint-plugin-react-dom';
import reactHooksExtra from 'eslint-plugin-react-hooks-extra';
import reactNamingConvention from 'eslint-plugin-react-naming-convention';
import reactWebApi from 'eslint-plugin-react-web-api';
import react from 'eslint-plugin-react-x';
import { DEFAULT_ESLINT_REACT_SETTINGS } from '@eslint-react/shared';

var __defProp = Object.defineProperty;
var __export = (target, all) => {
  for (var name14 in all)
    __defProp(target, name14, { get: all[name14], enumerable: true });
};

// package.json
var name = "@eslint-react/eslint-plugin";
var version = "1.50.0";

// src/configs/all.ts
var all_exports = {};
__export(all_exports, {
  name: () => name4,
  plugins: () => plugins3,
  rules: () => rules3,
  settings: () => settings3
});

// src/configs/dom.ts
var dom_exports = {};
__export(dom_exports, {
  name: () => name2,
  plugins: () => plugins,
  rules: () => rules,
  settings: () => settings
});
var name2 = "@eslint-react/dom";
var rules = {
  "@eslint-react/dom/no-dangerously-set-innerhtml": "warn",
  "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error",
  "@eslint-react/dom/no-find-dom-node": "error",
  "@eslint-react/dom/no-flush-sync": "error",
  "@eslint-react/dom/no-hydrate": "error",
  "@eslint-react/dom/no-missing-button-type": "warn",
  "@eslint-react/dom/no-missing-iframe-sandbox": "warn",
  "@eslint-react/dom/no-namespace": "error",
  "@eslint-react/dom/no-render": "error",
  "@eslint-react/dom/no-render-return-value": "error",
  "@eslint-react/dom/no-script-url": "warn",
  "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn",
  "@eslint-react/dom/no-unsafe-target-blank": "warn",
  "@eslint-react/dom/no-use-form-state": "error",
  "@eslint-react/dom/no-void-elements-with-children": "error"
};
var plugins = {
  "@eslint-react/dom": reactDom
};
var settings = {
  "react-x": DEFAULT_ESLINT_REACT_SETTINGS
};

// src/configs/x.ts
var x_exports = {};
__export(x_exports, {
  name: () => name3,
  plugins: () => plugins2,
  rules: () => rules2,
  settings: () => settings2
});
var name3 = "@eslint-react/x";
var rules2 = {
  "@eslint-react/jsx-key-before-spread": "warn",
  "@eslint-react/jsx-no-duplicate-props": "warn",
  "@eslint-react/jsx-uses-react": "warn",
  "@eslint-react/jsx-uses-vars": "warn",
  "@eslint-react/no-access-state-in-setstate": "error",
  "@eslint-react/no-array-index-key": "warn",
  "@eslint-react/no-children-count": "warn",
  "@eslint-react/no-children-for-each": "warn",
  "@eslint-react/no-children-map": "warn",
  "@eslint-react/no-children-only": "warn",
  "@eslint-react/no-children-to-array": "warn",
  "@eslint-react/no-clone-element": "warn",
  "@eslint-react/no-comment-textnodes": "warn",
  "@eslint-react/no-component-will-mount": "error",
  "@eslint-react/no-component-will-receive-props": "error",
  "@eslint-react/no-component-will-update": "error",
  "@eslint-react/no-context-provider": "warn",
  "@eslint-react/no-create-ref": "error",
  "@eslint-react/no-default-props": "error",
  "@eslint-react/no-direct-mutation-state": "error",
  "@eslint-react/no-duplicate-key": "warn",
  "@eslint-react/no-forward-ref": "warn",
  "@eslint-react/no-implicit-key": "warn",
  "@eslint-react/no-missing-key": "error",
  "@eslint-react/no-misused-capture-owner-stack": "error",
  "@eslint-react/no-nested-component-definitions": "error",
  "@eslint-react/no-nested-lazy-component-declarations": "warn",
  "@eslint-react/no-prop-types": "error",
  "@eslint-react/no-redundant-should-component-update": "error",
  "@eslint-react/no-set-state-in-component-did-mount": "warn",
  "@eslint-react/no-set-state-in-component-did-update": "warn",
  "@eslint-react/no-set-state-in-component-will-update": "warn",
  "@eslint-react/no-string-refs": "error",
  "@eslint-react/no-unsafe-component-will-mount": "warn",
  "@eslint-react/no-unsafe-component-will-receive-props": "warn",
  "@eslint-react/no-unsafe-component-will-update": "warn",
  "@eslint-react/no-unstable-context-value": "warn",
  "@eslint-react/no-unstable-default-props": "warn",
  "@eslint-react/no-unused-class-component-members": "warn",
  "@eslint-react/no-unused-state": "warn",
  "@eslint-react/no-use-context": "warn",
  "@eslint-react/no-useless-forward-ref": "warn"
};
var plugins2 = {
  "@eslint-react": react
};
var settings2 = {
  "react-x": DEFAULT_ESLINT_REACT_SETTINGS
};

// src/configs/all.ts
var name4 = "@eslint-react/all";
var rules3 = {
  "@eslint-react/avoid-shorthand-boolean": "warn",
  "@eslint-react/avoid-shorthand-fragment": "warn",
  "@eslint-react/jsx-key-before-spread": "warn",
  "@eslint-react/jsx-no-duplicate-props": "warn",
  "@eslint-react/jsx-no-undef": "error",
  "@eslint-react/jsx-uses-react": "warn",
  "@eslint-react/jsx-uses-vars": "warn",
  "@eslint-react/no-access-state-in-setstate": "error",
  "@eslint-react/no-array-index-key": "warn",
  "@eslint-react/no-children-count": "warn",
  "@eslint-react/no-children-for-each": "warn",
  "@eslint-react/no-children-map": "warn",
  "@eslint-react/no-children-only": "warn",
  "@eslint-react/no-children-prop": "warn",
  "@eslint-react/no-children-to-array": "warn",
  "@eslint-react/no-class-component": "warn",
  "@eslint-react/no-clone-element": "warn",
  "@eslint-react/no-comment-textnodes": "warn",
  "@eslint-react/no-complex-conditional-rendering": "warn",
  "@eslint-react/no-component-will-mount": "error",
  "@eslint-react/no-component-will-receive-props": "error",
  "@eslint-react/no-component-will-update": "error",
  "@eslint-react/no-context-provider": "warn",
  "@eslint-react/no-create-ref": "error",
  "@eslint-react/no-default-props": "error",
  "@eslint-react/no-direct-mutation-state": "error",
  "@eslint-react/no-duplicate-key": "warn",
  "@eslint-react/no-forward-ref": "warn",
  "@eslint-react/no-implicit-key": "warn",
  // "@eslint-react/no-leaked-conditional-rendering": "warn",
  "@eslint-react/no-missing-component-display-name": "warn",
  "@eslint-react/no-missing-context-display-name": "warn",
  "@eslint-react/no-missing-key": "error",
  "@eslint-react/no-misused-capture-owner-stack": "error",
  "@eslint-react/no-nested-component-definitions": "error",
  "@eslint-react/no-nested-lazy-component-declarations": "warn",
  "@eslint-react/no-prop-types": "error",
  "@eslint-react/no-redundant-should-component-update": "error",
  "@eslint-react/no-set-state-in-component-did-mount": "warn",
  "@eslint-react/no-set-state-in-component-did-update": "warn",
  "@eslint-react/no-set-state-in-component-will-update": "warn",
  "@eslint-react/no-string-refs": "error",
  "@eslint-react/no-unsafe-component-will-mount": "warn",
  "@eslint-react/no-unsafe-component-will-receive-props": "warn",
  "@eslint-react/no-unsafe-component-will-update": "warn",
  "@eslint-react/no-unstable-context-value": "warn",
  "@eslint-react/no-unstable-default-props": "warn",
  "@eslint-react/no-unused-class-component-members": "warn",
  "@eslint-react/no-unused-state": "warn",
  "@eslint-react/no-use-context": "warn",
  "@eslint-react/no-useless-forward-ref": "warn",
  "@eslint-react/no-useless-fragment": "warn",
  "@eslint-react/prefer-destructuring-assignment": "warn",
  "@eslint-react/prefer-react-namespace-import": "warn",
  // "@eslint-react/prefer-read-only-props": "warn",
  "@eslint-react/prefer-shorthand-boolean": "off",
  "@eslint-react/prefer-shorthand-fragment": "off",
  "@eslint-react/dom/no-dangerously-set-innerhtml": "warn",
  "@eslint-react/dom/no-dangerously-set-innerhtml-with-children": "error",
  "@eslint-react/dom/no-find-dom-node": "error",
  "@eslint-react/dom/no-flush-sync": "error",
  "@eslint-react/dom/no-hydrate": "error",
  "@eslint-react/dom/no-missing-button-type": "warn",
  "@eslint-react/dom/no-missing-iframe-sandbox": "warn",
  "@eslint-react/dom/no-namespace": "error",
  "@eslint-react/dom/no-render": "error",
  "@eslint-react/dom/no-render-return-value": "error",
  "@eslint-react/dom/no-script-url": "warn",
  "@eslint-react/dom/no-unknown-property": "warn",
  "@eslint-react/dom/no-unsafe-iframe-sandbox": "warn",
  "@eslint-react/dom/no-unsafe-target-blank": "warn",
  "@eslint-react/dom/no-use-form-state": "error",
  "@eslint-react/dom/no-void-elements-with-children": "error",
  "@eslint-react/web-api/no-leaked-event-listener": "warn",
  "@eslint-react/web-api/no-leaked-interval": "warn",
  "@eslint-react/web-api/no-leaked-resize-observer": "warn",
  "@eslint-react/web-api/no-leaked-timeout": "warn",
  "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn",
  "@eslint-react/hooks-extra/no-direct-set-state-in-use-layout-effect": "warn",
  "@eslint-react/hooks-extra/no-unnecessary-use-callback": "warn",
  "@eslint-react/hooks-extra/no-unnecessary-use-memo": "warn",
  "@eslint-react/hooks-extra/no-unnecessary-use-prefix": "warn",
  "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn",
  "@eslint-react/naming-convention/component-name": "warn",
  "@eslint-react/naming-convention/context-name": "warn",
  "@eslint-react/naming-convention/filename": "warn",
  "@eslint-react/naming-convention/filename-extension": "warn",
  "@eslint-react/naming-convention/use-state": "warn"
};
var plugins3 = {
  ...plugins2,
  ...plugins,
  "@eslint-react/debug": reactDebug,
  "@eslint-react/hooks-extra": reactHooksExtra,
  "@eslint-react/naming-convention": reactNamingConvention,
  "@eslint-react/web-api": reactWebApi
};
var settings3 = {
  ...settings
};

// src/configs/debug.ts
var debug_exports = {};
__export(debug_exports, {
  name: () => name5,
  plugins: () => plugins4,
  rules: () => rules4
});
var name5 = "@eslint-react/debug";
var rules4 = {
  "@eslint-react/debug/class-component": "warn",
  "@eslint-react/debug/function-component": "warn",
  "@eslint-react/debug/hook": "warn",
  "@eslint-react/debug/is-from-react": "warn",
  "@eslint-react/debug/jsx": "warn"
};
var plugins4 = {
  "@eslint-react/debug": reactDebug
};

// src/configs/disable-debug.ts
var disable_debug_exports = {};
__export(disable_debug_exports, {
  name: () => name6,
  rules: () => rules5
});
var name6 = "@eslint-react/disable-debug";
var rules5 = Object.fromEntries(Object.entries(rules4).map(([rule]) => [rule, "off"]));

// src/configs/disable-dom.ts
var disable_dom_exports = {};
__export(disable_dom_exports, {
  name: () => name7,
  rules: () => rules6
});
var name7 = "@eslint-react/disable-dom";
var rules6 = Object.fromEntries(Object.entries(rules).map(([key]) => [key, "off"]));

// src/configs/disable-type-checked.ts
var disable_type_checked_exports = {};
__export(disable_type_checked_exports, {
  name: () => name8,
  rules: () => rules7
});
var name8 = "@eslint-react/disable-type-checked";
var rules7 = {
  "@eslint-react/no-leaked-conditional-rendering": "off",
  "@eslint-react/prefer-read-only-props": "off"
};

// src/configs/disable-web-api.ts
var disable_web_api_exports = {};
__export(disable_web_api_exports, {
  name: () => name9,
  rules: () => rules9
});
var rules8 = {
  "@eslint-react/web-api/no-leaked-event-listener": "warn",
  "@eslint-react/web-api/no-leaked-interval": "warn",
  "@eslint-react/web-api/no-leaked-resize-observer": "warn",
  "@eslint-react/web-api/no-leaked-timeout": "warn"
};
var plugins5 = {
  "@eslint-react/web-api": reactWebApi
};

// src/configs/disable-web-api.ts
var name9 = "@eslint-react/disable-web-api";
var rules9 = Object.fromEntries(Object.entries(rules8).map(([key]) => [key, "off"]));

// src/configs/off.ts
var off_exports = {};
__export(off_exports, {
  name: () => name10,
  rules: () => rules10
});
var name10 = "@eslint-react/off";
var rules10 = {
  ...Object.fromEntries(Object.entries(rules3).map(([key]) => [key, "off"])),
  ...rules7
};

// src/configs/recommended.ts
var recommended_exports = {};
__export(recommended_exports, {
  name: () => name11,
  plugins: () => plugins6,
  rules: () => rules11,
  settings: () => settings5
});
var name11 = "@eslint-react/recommended";
var rules11 = {
  ...rules2,
  ...rules,
  ...rules8,
  "@eslint-react/hooks-extra/no-direct-set-state-in-use-effect": "warn",
  "@eslint-react/hooks-extra/no-unnecessary-use-prefix": "warn",
  "@eslint-react/hooks-extra/prefer-use-state-lazy-initialization": "warn",
  "@eslint-react/naming-convention/context-name": "warn"
  // "@eslint-react/naming-convention/use-state": "warn",
};
var plugins6 = {
  ...plugins2,
  ...plugins,
  ...plugins5,
  "@eslint-react/debug": reactDebug,
  "@eslint-react/hooks-extra": reactHooksExtra,
  "@eslint-react/naming-convention": reactNamingConvention
};
var settings5 = {
  ...settings
};

// src/configs/recommended-type-checked.ts
var recommended_type_checked_exports = {};
__export(recommended_type_checked_exports, {
  name: () => name13,
  plugins: () => plugins8,
  rules: () => rules13,
  settings: () => settings7
});

// src/configs/recommended-typescript.ts
var recommended_typescript_exports = {};
__export(recommended_typescript_exports, {
  name: () => name12,
  plugins: () => plugins7,
  rules: () => rules12,
  settings: () => settings6
});
var name12 = "@eslint-react/recommended-typescript";
var rules12 = {
  ...rules11,
  "@eslint-react/dom/no-unknown-property": "off",
  "@eslint-react/jsx-no-duplicate-props": "off",
  "@eslint-react/jsx-uses-react": "off",
  "@eslint-react/jsx-uses-vars": "off"
};
var plugins7 = {
  ...plugins6
};
var settings6 = {
  ...settings5
};

// src/configs/recommended-type-checked.ts
var name13 = "@eslint-react/recommended-type-checked";
var rules13 = {
  ...rules12,
  "@eslint-react/no-leaked-conditional-rendering": "warn"
  // "@eslint-react/prefer-read-only-props": "warn",
};
var plugins8 = {
  ...plugins7
};
var settings7 = {
  ...settings6
};

// src/utils/type-of.ts
function typeOf(t) {
  return Object.prototype.toString.call(t).replace(/^\[object (.+)\]$/, "$1").toLowerCase();
}

// src/utils/transform-keys.ts
function transformKeys(obj, transform) {
  if (typeOf(obj) !== "object") {
    return obj;
  }
  const res = {};
  for (const key in obj) {
    res[transform(key)] = obj[key];
  }
  return res;
}

// src/utils/pad-keys-left.ts
function padKeysLeft(obj, left) {
  return transformKeys(obj, (key) => `${left}${key}`);
}

// src/index.ts
function toLegacyConfig({ rules: rules14 }) {
  return {
    plugins: ["@eslint-react"],
    rules: rules14
  };
}
var index_default = {
  meta: {
    name,
    version
  },
  configs: {
    ["all"]: all_exports,
    ["all-legacy"]: toLegacyConfig(all_exports),
    ["debug"]: debug_exports,
    ["debug-legacy"]: toLegacyConfig(debug_exports),
    ["disable-debug"]: disable_debug_exports,
    ["disable-debug-legacy"]: toLegacyConfig(disable_debug_exports),
    ["disable-dom"]: disable_dom_exports,
    ["disable-dom-legacy"]: toLegacyConfig(disable_dom_exports),
    ["disable-type-checked"]: disable_type_checked_exports,
    ["disable-type-checked-legacy"]: toLegacyConfig(disable_type_checked_exports),
    ["disable-web-api"]: disable_web_api_exports,
    ["disable-web-api-legacy"]: toLegacyConfig(disable_web_api_exports),
    ["dom"]: dom_exports,
    ["dom-legacy"]: toLegacyConfig(dom_exports),
    ["off"]: off_exports,
    ["off-legacy"]: toLegacyConfig(off_exports),
    ["recommended"]: recommended_exports,
    ["recommended-legacy"]: toLegacyConfig(recommended_exports),
    ["recommended-type-checked"]: recommended_type_checked_exports,
    ["recommended-type-checked-legacy"]: toLegacyConfig(recommended_type_checked_exports),
    ["recommended-typescript"]: recommended_typescript_exports,
    ["recommended-typescript-legacy"]: toLegacyConfig(recommended_typescript_exports),
    ["x"]: x_exports,
    ["x-legacy"]: toLegacyConfig(x_exports),
    // Part: deprecated presets
    /** @deprecated Use `x` instead */
    ["core"]: x_exports,
    /** @deprecated Use `x-legacy` instead */
    ["core-legacy"]: toLegacyConfig(x_exports),
    /** @deprecated Use `disable-dom` instead */
    ["off-dom"]: disable_dom_exports,
    /** @deprecated Use `disable-dom-legacy` instead */
    ["off-dom-legacy"]: toLegacyConfig(disable_dom_exports)
  },
  rules: {
    ...react.rules,
    ...padKeysLeft(reactDom.rules, "dom/"),
    ...padKeysLeft(reactWebApi.rules, "web-api/"),
    ...padKeysLeft(reactHooksExtra.rules, "hooks-extra/"),
    ...padKeysLeft(reactNamingConvention.rules, "naming-convention/"),
    ...padKeysLeft(reactDebug.rules, "debug/")
  }
};

export { index_default as default };
