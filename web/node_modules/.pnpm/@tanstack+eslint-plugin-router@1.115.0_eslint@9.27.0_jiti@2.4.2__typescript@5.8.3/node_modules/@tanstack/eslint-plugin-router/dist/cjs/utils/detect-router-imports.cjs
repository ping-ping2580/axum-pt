"use strict";
Object.defineProperty(exports, Symbol.toStringTag, { value: "Module" });
const utils = require("@typescript-eslint/utils");
function detectTanstackRouterImports(create) {
  return (context, optionsWithDefault) => {
    const tanstackRouterImportSpecifiers = [];
    const helpers = {
      isSpecificTanstackRouterImport(node, source) {
        return !!tanstackRouterImportSpecifiers.find((specifier) => {
          if (specifier.type === utils.TSESTree.AST_NODE_TYPES.ImportSpecifier && specifier.parent.type === utils.TSESTree.AST_NODE_TYPES.ImportDeclaration && specifier.parent.source.value === source) {
            return node.name === specifier.local.name;
          }
          return false;
        });
      },
      isTanstackRouterImport(node) {
        return !!tanstackRouterImportSpecifiers.find((specifier) => {
          if (specifier.type === utils.TSESTree.AST_NODE_TYPES.ImportSpecifier) {
            return node.name === specifier.local.name;
          }
          return false;
        });
      }
    };
    const detectionInstructions = {
      ImportDeclaration(node) {
        if (node.specifiers.length > 0 && node.importKind === "value" && node.source.value.startsWith("@tanstack/") && node.source.value.endsWith("-router")) {
          tanstackRouterImportSpecifiers.push(...node.specifiers);
        }
      }
    };
    const ruleInstructions = create(context, optionsWithDefault, helpers);
    const enhancedRuleInstructions = {};
    const allKeys = new Set(
      Object.keys(detectionInstructions).concat(Object.keys(ruleInstructions))
    );
    allKeys.forEach((instruction) => {
      enhancedRuleInstructions[instruction] = (node) => {
        var _a;
        if (instruction in detectionInstructions) {
          (_a = detectionInstructions[instruction]) == null ? void 0 : _a.call(detectionInstructions, node);
        }
        const ruleFunction = ruleInstructions[instruction];
        if (ruleFunction !== void 0) {
          return ruleFunction(node);
        }
        return void 0;
      };
    });
    return enhancedRuleInstructions;
  };
}
exports.detectTanstackRouterImports = detectTanstackRouterImports;
//# sourceMappingURL=detect-router-imports.cjs.map
