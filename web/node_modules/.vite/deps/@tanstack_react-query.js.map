{"version":3,"file":"@tanstack_react-query.js","names":["#setup","#cleanup","#focused","#setup","#cleanup","#online","#gcTimeout","#abortSignalConsumed","#defaultOptions","#client","#cache","#initialState","#retryer","#dispatch","#revertState","getDefaultState","#queries","#mutationCache","#observers","#retryer","#dispatch","#mutations","#scopes","#mutationId","#queryCache","#mutationCache","#defaultOptions","#queryDefaults","#mutationDefaults","#mountCount","#unsubscribeFocus","#unsubscribeOnline","#client","#selectError","#currentThenable","#currentQuery","#executeFetch","#updateTimers","#clearStaleTimeout","#clearRefetchInterval","#updateQuery","#updateStaleTimeout","#computeRefetchInterval","#currentRefetchInterval","#updateRefetchInterval","#currentResult","#currentResultOptions","#currentResultState","#trackedProps","#staleTimeoutId","#refetchIntervalId","#currentQueryInitialState","#lastQueryWithDefinedData","#selectFn","#selectResult","#notify","#client","#options","#queries","#observers","#result","#onUpdate","#findMatchingObservers","#observerMatches","#notify","#combineResult","#trackResult","#combinedResult","#lastResult","#lastCombine","#client","#updateResult","#currentMutation","#notify","#currentResult","#mutateOptions"],"sources":["../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/subscribable.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/utils.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/focusManager.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/onlineManager.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/thenable.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/retryer.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/notifyManager.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/removable.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/query.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/queryCache.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/mutation.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/mutationCache.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/queryClient.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/queryObserver.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/queriesObserver.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/infiniteQueryObserver.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/mutationObserver.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/hydration.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/streamedQuery.js","../../.pnpm/@tanstack+query-core@5.79.0/node_modules/@tanstack/query-core/build/modern/types.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/IsRestoringProvider.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/QueryErrorResetBoundary.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/errorBoundaryUtils.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/suspense.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useQueries.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useBaseQuery.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useQuery.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useSuspenseQuery.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useSuspenseInfiniteQuery.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useSuspenseQueries.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/usePrefetchQuery.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/usePrefetchInfiniteQuery.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/queryOptions.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/infiniteQueryOptions.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/HydrationBoundary.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useIsFetching.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useMutationState.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useMutation.js","../../.pnpm/@tanstack+react-query@5.79.0_react@19.1.0/node_modules/@tanstack/react-query/build/modern/useInfiniteQuery.js"],"sourcesContent":["// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItems.includes(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  })?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const queryFnContext = {\n        client: this.#client,\n        queryKey: this.queryKey,\n        meta: this.meta\n      };\n      addSignalProperty(queryFnContext);\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const context = {\n      fetchOptions,\n      options: this.options,\n      queryKey: this.queryKey,\n      client: this.#client,\n      state: this.state,\n      fetchFn\n    };\n    addSignalProperty(context);\n    this.options.behavior?.onFetch(\n      context,\n      this\n    );\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const queryFnContext = {\n            client: context.client,\n            queryKey: context.queryKey,\n            pageParam: param,\n            direction: previous ? \"backward\" : \"forward\",\n            meta: context.options.meta\n          };\n          addSignalProperty(queryFnContext);\n          const page = await queryFn(\n            queryFnContext\n          );\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/queryObserver.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { fetchState } from \"./query.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport {\n  isServer,\n  isValidTimeout,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  timeUntilStale\n} from \"./utils.js\";\nvar QueryObserver = class extends Subscribable {\n  constructor(client, options) {\n    super();\n    this.options = options;\n    this.#client = client;\n    this.#selectError = null;\n    this.#currentThenable = pendingThenable();\n    if (!this.options.experimental_prefetchInRender) {\n      this.#currentThenable.reject(\n        new Error(\"experimental_prefetchInRender feature flag is not enabled\")\n      );\n    }\n    this.bindMethods();\n    this.setOptions(options);\n  }\n  #client;\n  #currentQuery = void 0;\n  #currentQueryInitialState = void 0;\n  #currentResult = void 0;\n  #currentResultState;\n  #currentResultOptions;\n  #currentThenable;\n  #selectError;\n  #selectFn;\n  #selectResult;\n  // This property keeps track of the last query with defined data.\n  // It will be used to pass the previous data and query to the placeholder function between renders.\n  #lastQueryWithDefinedData;\n  #staleTimeoutId;\n  #refetchIntervalId;\n  #currentRefetchInterval;\n  #trackedProps = /* @__PURE__ */ new Set();\n  bindMethods() {\n    this.refetch = this.refetch.bind(this);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#currentQuery.addObserver(this);\n      if (shouldFetchOnMount(this.#currentQuery, this.options)) {\n        this.#executeFetch();\n      } else {\n        this.updateResult();\n      }\n      this.#updateTimers();\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.destroy();\n    }\n  }\n  shouldFetchOnReconnect() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnReconnect\n    );\n  }\n  shouldFetchOnWindowFocus() {\n    return shouldFetchOn(\n      this.#currentQuery,\n      this.options,\n      this.options.refetchOnWindowFocus\n    );\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#clearStaleTimeout();\n    this.#clearRefetchInterval();\n    this.#currentQuery.removeObserver(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    const prevQuery = this.#currentQuery;\n    this.options = this.#client.defaultQueryOptions(options);\n    if (this.options.enabled !== void 0 && typeof this.options.enabled !== \"boolean\" && typeof this.options.enabled !== \"function\" && typeof resolveEnabled(this.options.enabled, this.#currentQuery) !== \"boolean\") {\n      throw new Error(\n        \"Expected enabled to be a boolean or a callback that returns a boolean\"\n      );\n    }\n    this.#updateQuery();\n    this.#currentQuery.setOptions(this.options);\n    if (prevOptions._defaulted && !shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getQueryCache().notify({\n        type: \"observerOptionsUpdated\",\n        query: this.#currentQuery,\n        observer: this\n      });\n    }\n    const mounted = this.hasListeners();\n    if (mounted && shouldFetchOptionally(\n      this.#currentQuery,\n      prevQuery,\n      this.options,\n      prevOptions\n    )) {\n      this.#executeFetch();\n    }\n    this.updateResult();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || resolveStaleTime(this.options.staleTime, this.#currentQuery) !== resolveStaleTime(prevOptions.staleTime, this.#currentQuery))) {\n      this.#updateStaleTimeout();\n    }\n    const nextRefetchInterval = this.#computeRefetchInterval();\n    if (mounted && (this.#currentQuery !== prevQuery || resolveEnabled(this.options.enabled, this.#currentQuery) !== resolveEnabled(prevOptions.enabled, this.#currentQuery) || nextRefetchInterval !== this.#currentRefetchInterval)) {\n      this.#updateRefetchInterval(nextRefetchInterval);\n    }\n  }\n  getOptimisticResult(options) {\n    const query = this.#client.getQueryCache().build(this.#client, options);\n    const result = this.createResult(query, options);\n    if (shouldAssignObserverCurrentProperties(this, result)) {\n      this.#currentResult = result;\n      this.#currentResultOptions = this.options;\n      this.#currentResultState = this.#currentQuery.state;\n    }\n    return result;\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  trackResult(result, onPropTracked) {\n    return new Proxy(result, {\n      get: (target, key) => {\n        this.trackProp(key);\n        onPropTracked?.(key);\n        return Reflect.get(target, key);\n      }\n    });\n  }\n  trackProp(key) {\n    this.#trackedProps.add(key);\n  }\n  getCurrentQuery() {\n    return this.#currentQuery;\n  }\n  refetch({ ...options } = {}) {\n    return this.fetch({\n      ...options\n    });\n  }\n  fetchOptimistic(options) {\n    const defaultedOptions = this.#client.defaultQueryOptions(options);\n    const query = this.#client.getQueryCache().build(this.#client, defaultedOptions);\n    return query.fetch().then(() => this.createResult(query, defaultedOptions));\n  }\n  fetch(fetchOptions) {\n    return this.#executeFetch({\n      ...fetchOptions,\n      cancelRefetch: fetchOptions.cancelRefetch ?? true\n    }).then(() => {\n      this.updateResult();\n      return this.#currentResult;\n    });\n  }\n  #executeFetch(fetchOptions) {\n    this.#updateQuery();\n    let promise = this.#currentQuery.fetch(\n      this.options,\n      fetchOptions\n    );\n    if (!fetchOptions?.throwOnError) {\n      promise = promise.catch(noop);\n    }\n    return promise;\n  }\n  #updateStaleTimeout() {\n    this.#clearStaleTimeout();\n    const staleTime = resolveStaleTime(\n      this.options.staleTime,\n      this.#currentQuery\n    );\n    if (isServer || this.#currentResult.isStale || !isValidTimeout(staleTime)) {\n      return;\n    }\n    const time = timeUntilStale(this.#currentResult.dataUpdatedAt, staleTime);\n    const timeout = time + 1;\n    this.#staleTimeoutId = setTimeout(() => {\n      if (!this.#currentResult.isStale) {\n        this.updateResult();\n      }\n    }, timeout);\n  }\n  #computeRefetchInterval() {\n    return (typeof this.options.refetchInterval === \"function\" ? this.options.refetchInterval(this.#currentQuery) : this.options.refetchInterval) ?? false;\n  }\n  #updateRefetchInterval(nextInterval) {\n    this.#clearRefetchInterval();\n    this.#currentRefetchInterval = nextInterval;\n    if (isServer || resolveEnabled(this.options.enabled, this.#currentQuery) === false || !isValidTimeout(this.#currentRefetchInterval) || this.#currentRefetchInterval === 0) {\n      return;\n    }\n    this.#refetchIntervalId = setInterval(() => {\n      if (this.options.refetchIntervalInBackground || focusManager.isFocused()) {\n        this.#executeFetch();\n      }\n    }, this.#currentRefetchInterval);\n  }\n  #updateTimers() {\n    this.#updateStaleTimeout();\n    this.#updateRefetchInterval(this.#computeRefetchInterval());\n  }\n  #clearStaleTimeout() {\n    if (this.#staleTimeoutId) {\n      clearTimeout(this.#staleTimeoutId);\n      this.#staleTimeoutId = void 0;\n    }\n  }\n  #clearRefetchInterval() {\n    if (this.#refetchIntervalId) {\n      clearInterval(this.#refetchIntervalId);\n      this.#refetchIntervalId = void 0;\n    }\n  }\n  createResult(query, options) {\n    const prevQuery = this.#currentQuery;\n    const prevOptions = this.options;\n    const prevResult = this.#currentResult;\n    const prevResultState = this.#currentResultState;\n    const prevResultOptions = this.#currentResultOptions;\n    const queryChange = query !== prevQuery;\n    const queryInitialState = queryChange ? query.state : this.#currentQueryInitialState;\n    const { state } = query;\n    let newState = { ...state };\n    let isPlaceholderData = false;\n    let data;\n    if (options._optimisticResults) {\n      const mounted = this.hasListeners();\n      const fetchOnMount = !mounted && shouldFetchOnMount(query, options);\n      const fetchOptionally = mounted && shouldFetchOptionally(query, prevQuery, options, prevOptions);\n      if (fetchOnMount || fetchOptionally) {\n        newState = {\n          ...newState,\n          ...fetchState(state.data, query.options)\n        };\n      }\n      if (options._optimisticResults === \"isRestoring\") {\n        newState.fetchStatus = \"idle\";\n      }\n    }\n    let { error, errorUpdatedAt, status } = newState;\n    data = newState.data;\n    let skipSelect = false;\n    if (options.placeholderData !== void 0 && data === void 0 && status === \"pending\") {\n      let placeholderData;\n      if (prevResult?.isPlaceholderData && options.placeholderData === prevResultOptions?.placeholderData) {\n        placeholderData = prevResult.data;\n        skipSelect = true;\n      } else {\n        placeholderData = typeof options.placeholderData === \"function\" ? options.placeholderData(\n          this.#lastQueryWithDefinedData?.state.data,\n          this.#lastQueryWithDefinedData\n        ) : options.placeholderData;\n      }\n      if (placeholderData !== void 0) {\n        status = \"success\";\n        data = replaceData(\n          prevResult?.data,\n          placeholderData,\n          options\n        );\n        isPlaceholderData = true;\n      }\n    }\n    if (options.select && data !== void 0 && !skipSelect) {\n      if (prevResult && data === prevResultState?.data && options.select === this.#selectFn) {\n        data = this.#selectResult;\n      } else {\n        try {\n          this.#selectFn = options.select;\n          data = options.select(data);\n          data = replaceData(prevResult?.data, data, options);\n          this.#selectResult = data;\n          this.#selectError = null;\n        } catch (selectError) {\n          this.#selectError = selectError;\n        }\n      }\n    }\n    if (this.#selectError) {\n      error = this.#selectError;\n      data = this.#selectResult;\n      errorUpdatedAt = Date.now();\n      status = \"error\";\n    }\n    const isFetching = newState.fetchStatus === \"fetching\";\n    const isPending = status === \"pending\";\n    const isError = status === \"error\";\n    const isLoading = isPending && isFetching;\n    const hasData = data !== void 0;\n    const result = {\n      status,\n      fetchStatus: newState.fetchStatus,\n      isPending,\n      isSuccess: status === \"success\",\n      isError,\n      isInitialLoading: isLoading,\n      isLoading,\n      data,\n      dataUpdatedAt: newState.dataUpdatedAt,\n      error,\n      errorUpdatedAt,\n      failureCount: newState.fetchFailureCount,\n      failureReason: newState.fetchFailureReason,\n      errorUpdateCount: newState.errorUpdateCount,\n      isFetched: newState.dataUpdateCount > 0 || newState.errorUpdateCount > 0,\n      isFetchedAfterMount: newState.dataUpdateCount > queryInitialState.dataUpdateCount || newState.errorUpdateCount > queryInitialState.errorUpdateCount,\n      isFetching,\n      isRefetching: isFetching && !isPending,\n      isLoadingError: isError && !hasData,\n      isPaused: newState.fetchStatus === \"paused\",\n      isPlaceholderData,\n      isRefetchError: isError && hasData,\n      isStale: isStale(query, options),\n      refetch: this.refetch,\n      promise: this.#currentThenable\n    };\n    const nextResult = result;\n    if (this.options.experimental_prefetchInRender) {\n      const finalizeThenableIfPossible = (thenable) => {\n        if (nextResult.status === \"error\") {\n          thenable.reject(nextResult.error);\n        } else if (nextResult.data !== void 0) {\n          thenable.resolve(nextResult.data);\n        }\n      };\n      const recreateThenable = () => {\n        const pending = this.#currentThenable = nextResult.promise = pendingThenable();\n        finalizeThenableIfPossible(pending);\n      };\n      const prevThenable = this.#currentThenable;\n      switch (prevThenable.status) {\n        case \"pending\":\n          if (query.queryHash === prevQuery.queryHash) {\n            finalizeThenableIfPossible(prevThenable);\n          }\n          break;\n        case \"fulfilled\":\n          if (nextResult.status === \"error\" || nextResult.data !== prevThenable.value) {\n            recreateThenable();\n          }\n          break;\n        case \"rejected\":\n          if (nextResult.status !== \"error\" || nextResult.error !== prevThenable.reason) {\n            recreateThenable();\n          }\n          break;\n      }\n    }\n    return nextResult;\n  }\n  updateResult() {\n    const prevResult = this.#currentResult;\n    const nextResult = this.createResult(this.#currentQuery, this.options);\n    this.#currentResultState = this.#currentQuery.state;\n    this.#currentResultOptions = this.options;\n    if (this.#currentResultState.data !== void 0) {\n      this.#lastQueryWithDefinedData = this.#currentQuery;\n    }\n    if (shallowEqualObjects(nextResult, prevResult)) {\n      return;\n    }\n    this.#currentResult = nextResult;\n    const shouldNotifyListeners = () => {\n      if (!prevResult) {\n        return true;\n      }\n      const { notifyOnChangeProps } = this.options;\n      const notifyOnChangePropsValue = typeof notifyOnChangeProps === \"function\" ? notifyOnChangeProps() : notifyOnChangeProps;\n      if (notifyOnChangePropsValue === \"all\" || !notifyOnChangePropsValue && !this.#trackedProps.size) {\n        return true;\n      }\n      const includedProps = new Set(\n        notifyOnChangePropsValue ?? this.#trackedProps\n      );\n      if (this.options.throwOnError) {\n        includedProps.add(\"error\");\n      }\n      return Object.keys(this.#currentResult).some((key) => {\n        const typedKey = key;\n        const changed = this.#currentResult[typedKey] !== prevResult[typedKey];\n        return changed && includedProps.has(typedKey);\n      });\n    };\n    this.#notify({ listeners: shouldNotifyListeners() });\n  }\n  #updateQuery() {\n    const query = this.#client.getQueryCache().build(this.#client, this.options);\n    if (query === this.#currentQuery) {\n      return;\n    }\n    const prevQuery = this.#currentQuery;\n    this.#currentQuery = query;\n    this.#currentQueryInitialState = query.state;\n    if (this.hasListeners()) {\n      prevQuery?.removeObserver(this);\n      query.addObserver(this);\n    }\n  }\n  onQueryUpdate() {\n    this.updateResult();\n    if (this.hasListeners()) {\n      this.#updateTimers();\n    }\n  }\n  #notify(notifyOptions) {\n    notifyManager.batch(() => {\n      if (notifyOptions.listeners) {\n        this.listeners.forEach((listener) => {\n          listener(this.#currentResult);\n        });\n      }\n      this.#client.getQueryCache().notify({\n        query: this.#currentQuery,\n        type: \"observerResultsUpdated\"\n      });\n    });\n  }\n};\nfunction shouldLoadOnMount(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.state.data === void 0 && !(query.state.status === \"error\" && options.retryOnMount === false);\n}\nfunction shouldFetchOnMount(query, options) {\n  return shouldLoadOnMount(query, options) || query.state.data !== void 0 && shouldFetchOn(query, options, options.refetchOnMount);\n}\nfunction shouldFetchOn(query, options, field) {\n  if (resolveEnabled(options.enabled, query) !== false && resolveStaleTime(options.staleTime, query) !== \"static\") {\n    const value = typeof field === \"function\" ? field(query) : field;\n    return value === \"always\" || value !== false && isStale(query, options);\n  }\n  return false;\n}\nfunction shouldFetchOptionally(query, prevQuery, options, prevOptions) {\n  return (query !== prevQuery || resolveEnabled(prevOptions.enabled, query) === false) && (!options.suspense || query.state.status !== \"error\") && isStale(query, options);\n}\nfunction isStale(query, options) {\n  return resolveEnabled(options.enabled, query) !== false && query.isStaleByTime(resolveStaleTime(options.staleTime, query));\n}\nfunction shouldAssignObserverCurrentProperties(observer, optimisticResult) {\n  if (!shallowEqualObjects(observer.getCurrentResult(), optimisticResult)) {\n    return true;\n  }\n  return false;\n}\nexport {\n  QueryObserver\n};\n//# sourceMappingURL=queryObserver.js.map","// src/queriesObserver.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { QueryObserver } from \"./queryObserver.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { replaceEqualDeep } from \"./utils.js\";\nfunction difference(array1, array2) {\n  return array1.filter((x) => !array2.includes(x));\n}\nfunction replaceAt(array, index, value) {\n  const copy = array.slice(0);\n  copy[index] = value;\n  return copy;\n}\nvar QueriesObserver = class extends Subscribable {\n  #client;\n  #result;\n  #queries;\n  #options;\n  #observers;\n  #combinedResult;\n  #lastCombine;\n  #lastResult;\n  #observerMatches = [];\n  constructor(client, queries, options) {\n    super();\n    this.#client = client;\n    this.#options = options;\n    this.#queries = [];\n    this.#observers = [];\n    this.#result = [];\n    this.setQueries(queries);\n  }\n  onSubscribe() {\n    if (this.listeners.size === 1) {\n      this.#observers.forEach((observer) => {\n        observer.subscribe((result) => {\n          this.#onUpdate(observer, result);\n        });\n      });\n    }\n  }\n  onUnsubscribe() {\n    if (!this.listeners.size) {\n      this.destroy();\n    }\n  }\n  destroy() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.#observers.forEach((observer) => {\n      observer.destroy();\n    });\n  }\n  setQueries(queries, options) {\n    this.#queries = queries;\n    this.#options = options;\n    if (process.env.NODE_ENV !== \"production\") {\n      const queryHashes = queries.map(\n        (query) => this.#client.defaultQueryOptions(query).queryHash\n      );\n      if (new Set(queryHashes).size !== queryHashes.length) {\n        console.warn(\n          \"[QueriesObserver]: Duplicate Queries found. This might result in unexpected behavior.\"\n        );\n      }\n    }\n    notifyManager.batch(() => {\n      const prevObservers = this.#observers;\n      const newObserverMatches = this.#findMatchingObservers(this.#queries);\n      this.#observerMatches = newObserverMatches;\n      newObserverMatches.forEach(\n        (match) => match.observer.setOptions(match.defaultedQueryOptions)\n      );\n      const newObservers = newObserverMatches.map((match) => match.observer);\n      const newResult = newObservers.map(\n        (observer) => observer.getCurrentResult()\n      );\n      const hasIndexChange = newObservers.some(\n        (observer, index) => observer !== prevObservers[index]\n      );\n      if (prevObservers.length === newObservers.length && !hasIndexChange) {\n        return;\n      }\n      this.#observers = newObservers;\n      this.#result = newResult;\n      if (!this.hasListeners()) {\n        return;\n      }\n      difference(prevObservers, newObservers).forEach((observer) => {\n        observer.destroy();\n      });\n      difference(newObservers, prevObservers).forEach((observer) => {\n        observer.subscribe((result) => {\n          this.#onUpdate(observer, result);\n        });\n      });\n      this.#notify();\n    });\n  }\n  getCurrentResult() {\n    return this.#result;\n  }\n  getQueries() {\n    return this.#observers.map((observer) => observer.getCurrentQuery());\n  }\n  getObservers() {\n    return this.#observers;\n  }\n  getOptimisticResult(queries, combine) {\n    const matches = this.#findMatchingObservers(queries);\n    const result = matches.map(\n      (match) => match.observer.getOptimisticResult(match.defaultedQueryOptions)\n    );\n    return [\n      result,\n      (r) => {\n        return this.#combineResult(r ?? result, combine);\n      },\n      () => {\n        return this.#trackResult(result, matches);\n      }\n    ];\n  }\n  #trackResult(result, matches) {\n    return matches.map((match, index) => {\n      const observerResult = result[index];\n      return !match.defaultedQueryOptions.notifyOnChangeProps ? match.observer.trackResult(observerResult, (accessedProp) => {\n        matches.forEach((m) => {\n          m.observer.trackProp(accessedProp);\n        });\n      }) : observerResult;\n    });\n  }\n  #combineResult(input, combine) {\n    if (combine) {\n      if (!this.#combinedResult || this.#result !== this.#lastResult || combine !== this.#lastCombine) {\n        this.#lastCombine = combine;\n        this.#lastResult = this.#result;\n        this.#combinedResult = replaceEqualDeep(\n          this.#combinedResult,\n          combine(input)\n        );\n      }\n      return this.#combinedResult;\n    }\n    return input;\n  }\n  #findMatchingObservers(queries) {\n    const prevObserversMap = new Map(\n      this.#observers.map((observer) => [observer.options.queryHash, observer])\n    );\n    const observers = [];\n    queries.forEach((options) => {\n      const defaultedOptions = this.#client.defaultQueryOptions(options);\n      const match = prevObserversMap.get(defaultedOptions.queryHash);\n      if (match) {\n        observers.push({\n          defaultedQueryOptions: defaultedOptions,\n          observer: match\n        });\n      } else {\n        observers.push({\n          defaultedQueryOptions: defaultedOptions,\n          observer: new QueryObserver(this.#client, defaultedOptions)\n        });\n      }\n    });\n    return observers;\n  }\n  #onUpdate(observer, result) {\n    const index = this.#observers.indexOf(observer);\n    if (index !== -1) {\n      this.#result = replaceAt(this.#result, index, result);\n      this.#notify();\n    }\n  }\n  #notify() {\n    if (this.hasListeners()) {\n      const previousResult = this.#combinedResult;\n      const newTracked = this.#trackResult(this.#result, this.#observerMatches);\n      const newResult = this.#combineResult(newTracked, this.#options?.combine);\n      if (previousResult !== newResult) {\n        notifyManager.batch(() => {\n          this.listeners.forEach((listener) => {\n            listener(this.#result);\n          });\n        });\n      }\n    }\n  }\n};\nexport {\n  QueriesObserver\n};\n//# sourceMappingURL=queriesObserver.js.map","// src/infiniteQueryObserver.ts\nimport { QueryObserver } from \"./queryObserver.js\";\nimport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n} from \"./infiniteQueryBehavior.js\";\nvar InfiniteQueryObserver = class extends QueryObserver {\n  constructor(client, options) {\n    super(client, options);\n  }\n  bindMethods() {\n    super.bindMethods();\n    this.fetchNextPage = this.fetchNextPage.bind(this);\n    this.fetchPreviousPage = this.fetchPreviousPage.bind(this);\n  }\n  setOptions(options) {\n    super.setOptions({\n      ...options,\n      behavior: infiniteQueryBehavior()\n    });\n  }\n  getOptimisticResult(options) {\n    options.behavior = infiniteQueryBehavior();\n    return super.getOptimisticResult(options);\n  }\n  fetchNextPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"forward\" }\n      }\n    });\n  }\n  fetchPreviousPage(options) {\n    return this.fetch({\n      ...options,\n      meta: {\n        fetchMore: { direction: \"backward\" }\n      }\n    });\n  }\n  createResult(query, options) {\n    const { state } = query;\n    const parentResult = super.createResult(query, options);\n    const { isFetching, isRefetching, isError, isRefetchError } = parentResult;\n    const fetchDirection = state.fetchMeta?.fetchMore?.direction;\n    const isFetchNextPageError = isError && fetchDirection === \"forward\";\n    const isFetchingNextPage = isFetching && fetchDirection === \"forward\";\n    const isFetchPreviousPageError = isError && fetchDirection === \"backward\";\n    const isFetchingPreviousPage = isFetching && fetchDirection === \"backward\";\n    const result = {\n      ...parentResult,\n      fetchNextPage: this.fetchNextPage,\n      fetchPreviousPage: this.fetchPreviousPage,\n      hasNextPage: hasNextPage(options, state.data),\n      hasPreviousPage: hasPreviousPage(options, state.data),\n      isFetchNextPageError,\n      isFetchingNextPage,\n      isFetchPreviousPageError,\n      isFetchingPreviousPage,\n      isRefetchError: isRefetchError && !isFetchNextPageError && !isFetchPreviousPageError,\n      isRefetching: isRefetching && !isFetchingNextPage && !isFetchingPreviousPage\n    };\n    return result;\n  }\n};\nexport {\n  InfiniteQueryObserver\n};\n//# sourceMappingURL=infiniteQueryObserver.js.map","// src/mutationObserver.ts\nimport { getDefaultState } from \"./mutation.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nimport { hashKey, shallowEqualObjects } from \"./utils.js\";\nvar MutationObserver = class extends Subscribable {\n  #client;\n  #currentResult = void 0;\n  #currentMutation;\n  #mutateOptions;\n  constructor(client, options) {\n    super();\n    this.#client = client;\n    this.setOptions(options);\n    this.bindMethods();\n    this.#updateResult();\n  }\n  bindMethods() {\n    this.mutate = this.mutate.bind(this);\n    this.reset = this.reset.bind(this);\n  }\n  setOptions(options) {\n    const prevOptions = this.options;\n    this.options = this.#client.defaultMutationOptions(options);\n    if (!shallowEqualObjects(this.options, prevOptions)) {\n      this.#client.getMutationCache().notify({\n        type: \"observerOptionsUpdated\",\n        mutation: this.#currentMutation,\n        observer: this\n      });\n    }\n    if (prevOptions?.mutationKey && this.options.mutationKey && hashKey(prevOptions.mutationKey) !== hashKey(this.options.mutationKey)) {\n      this.reset();\n    } else if (this.#currentMutation?.state.status === \"pending\") {\n      this.#currentMutation.setOptions(this.options);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#currentMutation?.removeObserver(this);\n    }\n  }\n  onMutationUpdate(action) {\n    this.#updateResult();\n    this.#notify(action);\n  }\n  getCurrentResult() {\n    return this.#currentResult;\n  }\n  reset() {\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = void 0;\n    this.#updateResult();\n    this.#notify();\n  }\n  mutate(variables, options) {\n    this.#mutateOptions = options;\n    this.#currentMutation?.removeObserver(this);\n    this.#currentMutation = this.#client.getMutationCache().build(this.#client, this.options);\n    this.#currentMutation.addObserver(this);\n    return this.#currentMutation.execute(variables);\n  }\n  #updateResult() {\n    const state = this.#currentMutation?.state ?? getDefaultState();\n    this.#currentResult = {\n      ...state,\n      isPending: state.status === \"pending\",\n      isSuccess: state.status === \"success\",\n      isError: state.status === \"error\",\n      isIdle: state.status === \"idle\",\n      mutate: this.mutate,\n      reset: this.reset\n    };\n  }\n  #notify(action) {\n    notifyManager.batch(() => {\n      if (this.#mutateOptions && this.hasListeners()) {\n        const variables = this.#currentResult.variables;\n        const context = this.#currentResult.context;\n        if (action?.type === \"success\") {\n          this.#mutateOptions.onSuccess?.(action.data, variables, context);\n          this.#mutateOptions.onSettled?.(action.data, null, variables, context);\n        } else if (action?.type === \"error\") {\n          this.#mutateOptions.onError?.(action.error, variables, context);\n          this.#mutateOptions.onSettled?.(\n            void 0,\n            action.error,\n            variables,\n            context\n          );\n        }\n      }\n      this.listeners.forEach((listener) => {\n        listener(this.#currentResult);\n      });\n    });\n  }\n};\nexport {\n  MutationObserver\n};\n//# sourceMappingURL=mutationObserver.js.map","// src/hydration.ts\nimport { tryResolveSync } from \"./thenable.js\";\nfunction defaultTransformerFn(data) {\n  return data;\n}\nfunction dehydrateMutation(mutation) {\n  return {\n    mutationKey: mutation.options.mutationKey,\n    state: mutation.state,\n    ...mutation.options.scope && { scope: mutation.options.scope },\n    ...mutation.meta && { meta: mutation.meta }\n  };\n}\nfunction dehydrateQuery(query, serializeData, shouldRedactErrors) {\n  return {\n    dehydratedAt: Date.now(),\n    state: {\n      ...query.state,\n      ...query.state.data !== void 0 && {\n        data: serializeData(query.state.data)\n      }\n    },\n    queryKey: query.queryKey,\n    queryHash: query.queryHash,\n    ...query.state.status === \"pending\" && {\n      promise: query.promise?.then(serializeData).catch((error) => {\n        if (!shouldRedactErrors(error)) {\n          return Promise.reject(error);\n        }\n        if (process.env.NODE_ENV !== \"production\") {\n          console.error(\n            `A query that was dehydrated as pending ended up rejecting. [${query.queryHash}]: ${error}; The error will be redacted in production builds`\n          );\n        }\n        return Promise.reject(new Error(\"redacted\"));\n      })\n    },\n    ...query.meta && { meta: query.meta }\n  };\n}\nfunction defaultShouldDehydrateMutation(mutation) {\n  return mutation.state.isPaused;\n}\nfunction defaultShouldDehydrateQuery(query) {\n  return query.state.status === \"success\";\n}\nfunction defaultShouldRedactErrors(_) {\n  return true;\n}\nfunction dehydrate(client, options = {}) {\n  const filterMutation = options.shouldDehydrateMutation ?? client.getDefaultOptions().dehydrate?.shouldDehydrateMutation ?? defaultShouldDehydrateMutation;\n  const mutations = client.getMutationCache().getAll().flatMap(\n    (mutation) => filterMutation(mutation) ? [dehydrateMutation(mutation)] : []\n  );\n  const filterQuery = options.shouldDehydrateQuery ?? client.getDefaultOptions().dehydrate?.shouldDehydrateQuery ?? defaultShouldDehydrateQuery;\n  const shouldRedactErrors = options.shouldRedactErrors ?? client.getDefaultOptions().dehydrate?.shouldRedactErrors ?? defaultShouldRedactErrors;\n  const serializeData = options.serializeData ?? client.getDefaultOptions().dehydrate?.serializeData ?? defaultTransformerFn;\n  const queries = client.getQueryCache().getAll().flatMap(\n    (query) => filterQuery(query) ? [dehydrateQuery(query, serializeData, shouldRedactErrors)] : []\n  );\n  return { mutations, queries };\n}\nfunction hydrate(client, dehydratedState, options) {\n  if (typeof dehydratedState !== \"object\" || dehydratedState === null) {\n    return;\n  }\n  const mutationCache = client.getMutationCache();\n  const queryCache = client.getQueryCache();\n  const deserializeData = options?.defaultOptions?.deserializeData ?? client.getDefaultOptions().hydrate?.deserializeData ?? defaultTransformerFn;\n  const mutations = dehydratedState.mutations || [];\n  const queries = dehydratedState.queries || [];\n  mutations.forEach(({ state, ...mutationOptions }) => {\n    mutationCache.build(\n      client,\n      {\n        ...client.getDefaultOptions().hydrate?.mutations,\n        ...options?.defaultOptions?.mutations,\n        ...mutationOptions\n      },\n      state\n    );\n  });\n  queries.forEach(\n    ({ queryKey, state, queryHash, meta, promise, dehydratedAt }) => {\n      const syncData = promise ? tryResolveSync(promise) : void 0;\n      const rawData = state.data === void 0 ? syncData?.data : state.data;\n      const data = rawData === void 0 ? rawData : deserializeData(rawData);\n      let query = queryCache.get(queryHash);\n      const existingQueryIsPending = query?.state.status === \"pending\";\n      const existingQueryIsFetching = query?.state.fetchStatus === \"fetching\";\n      if (query) {\n        const hasNewerSyncData = syncData && // We only need this undefined check to handle older dehydration\n        // payloads that might not have dehydratedAt\n        dehydratedAt !== void 0 && dehydratedAt > query.state.dataUpdatedAt;\n        if (state.dataUpdatedAt > query.state.dataUpdatedAt || hasNewerSyncData) {\n          const { fetchStatus: _ignored, ...serializedState } = state;\n          query.setState({\n            ...serializedState,\n            data\n          });\n        }\n      } else {\n        query = queryCache.build(\n          client,\n          {\n            ...client.getDefaultOptions().hydrate?.queries,\n            ...options?.defaultOptions?.queries,\n            queryKey,\n            queryHash,\n            meta\n          },\n          // Reset fetch status to idle to avoid\n          // query being stuck in fetching state upon hydration\n          {\n            ...state,\n            data,\n            fetchStatus: \"idle\",\n            status: data !== void 0 ? \"success\" : state.status\n          }\n        );\n      }\n      if (promise && !existingQueryIsPending && !existingQueryIsFetching && // Only hydrate if dehydration is newer than any existing data,\n      // this is always true for new queries\n      (dehydratedAt === void 0 || dehydratedAt > query.state.dataUpdatedAt)) {\n        void query.fetch(void 0, {\n          // RSC transformed promises are not thenable\n          initialPromise: Promise.resolve(promise).then(deserializeData)\n        });\n      }\n    }\n  );\n}\nexport {\n  defaultShouldDehydrateMutation,\n  defaultShouldDehydrateQuery,\n  dehydrate,\n  hydrate\n};\n//# sourceMappingURL=hydration.js.map","// src/streamedQuery.ts\nimport { addToEnd } from \"./utils.js\";\nfunction streamedQuery({\n  queryFn,\n  refetchMode = \"reset\",\n  maxChunks\n}) {\n  return async (context) => {\n    const query = context.client.getQueryCache().find({ queryKey: context.queryKey, exact: true });\n    const isRefetch = !!query && query.state.data !== void 0;\n    if (isRefetch && refetchMode === \"reset\") {\n      query.setState({\n        status: \"pending\",\n        data: void 0,\n        error: null,\n        fetchStatus: \"fetching\"\n      });\n    }\n    let result = [];\n    const stream = await queryFn(context);\n    for await (const chunk of stream) {\n      if (context.signal.aborted) {\n        break;\n      }\n      if (!isRefetch || refetchMode !== \"replace\") {\n        context.client.setQueryData(\n          context.queryKey,\n          (prev = []) => {\n            return addToEnd(prev, chunk, maxChunks);\n          }\n        );\n      }\n      result = addToEnd(result, chunk, maxChunks);\n    }\n    if (isRefetch && refetchMode === \"replace\" && !context.signal.aborted) {\n      context.client.setQueryData(context.queryKey, result);\n    }\n    return context.client.getQueryData(context.queryKey);\n  };\n}\nexport {\n  streamedQuery\n};\n//# sourceMappingURL=streamedQuery.js.map","// src/types.ts\nvar dataTagSymbol = Symbol(\"dataTagSymbol\");\nvar dataTagErrorSymbol = Symbol(\"dataTagErrorSymbol\");\nvar unsetMarker = Symbol(\"unsetMarker\");\nexport {\n  dataTagErrorSymbol,\n  dataTagSymbol,\n  unsetMarker\n};\n//# sourceMappingURL=types.js.map","\"use client\";\n\n// src/QueryClientProvider.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nvar QueryClientContext = React.createContext(\n  void 0\n);\nvar useQueryClient = (queryClient) => {\n  const client = React.useContext(QueryClientContext);\n  if (queryClient) {\n    return queryClient;\n  }\n  if (!client) {\n    throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n  }\n  return client;\n};\nvar QueryClientProvider = ({\n  client,\n  children\n}) => {\n  React.useEffect(() => {\n    client.mount();\n    return () => {\n      client.unmount();\n    };\n  }, [client]);\n  return /* @__PURE__ */ jsx(QueryClientContext.Provider, { value: client, children });\n};\nexport {\n  QueryClientContext,\n  QueryClientProvider,\n  useQueryClient\n};\n//# sourceMappingURL=QueryClientProvider.js.map","\"use client\";\n\n// src/IsRestoringProvider.ts\nimport * as React from \"react\";\nvar IsRestoringContext = React.createContext(false);\nvar useIsRestoring = () => React.useContext(IsRestoringContext);\nvar IsRestoringProvider = IsRestoringContext.Provider;\nexport {\n  IsRestoringProvider,\n  useIsRestoring\n};\n//# sourceMappingURL=IsRestoringProvider.js.map","\"use client\";\n\n// src/QueryErrorResetBoundary.tsx\nimport * as React from \"react\";\nimport { jsx } from \"react/jsx-runtime\";\nfunction createValue() {\n  let isReset = false;\n  return {\n    clearReset: () => {\n      isReset = false;\n    },\n    reset: () => {\n      isReset = true;\n    },\n    isReset: () => {\n      return isReset;\n    }\n  };\n}\nvar QueryErrorResetBoundaryContext = React.createContext(createValue());\nvar useQueryErrorResetBoundary = () => React.useContext(QueryErrorResetBoundaryContext);\nvar QueryErrorResetBoundary = ({\n  children\n}) => {\n  const [value] = React.useState(() => createValue());\n  return /* @__PURE__ */ jsx(QueryErrorResetBoundaryContext.Provider, { value, children: typeof children === \"function\" ? children(value) : children });\n};\nexport {\n  QueryErrorResetBoundary,\n  useQueryErrorResetBoundary\n};\n//# sourceMappingURL=QueryErrorResetBoundary.js.map","\"use client\";\n\n// src/errorBoundaryUtils.ts\nimport * as React from \"react\";\nimport { shouldThrowError } from \"@tanstack/query-core\";\nvar ensurePreventErrorBoundaryRetry = (options, errorResetBoundary) => {\n  if (options.suspense || options.throwOnError || options.experimental_prefetchInRender) {\n    if (!errorResetBoundary.isReset()) {\n      options.retryOnMount = false;\n    }\n  }\n};\nvar useClearResetErrorBoundary = (errorResetBoundary) => {\n  React.useEffect(() => {\n    errorResetBoundary.clearReset();\n  }, [errorResetBoundary]);\n};\nvar getHasError = ({\n  result,\n  errorResetBoundary,\n  throwOnError,\n  query,\n  suspense\n}) => {\n  return result.isError && !errorResetBoundary.isReset() && !result.isFetching && query && (suspense && result.data === void 0 || shouldThrowError(throwOnError, [result.error, query]));\n};\nexport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n};\n//# sourceMappingURL=errorBoundaryUtils.js.map","// src/suspense.ts\nvar defaultThrowOnError = (_error, query) => query.state.data === void 0;\nvar ensureSuspenseTimers = (defaultedOptions) => {\n  if (defaultedOptions.suspense) {\n    const clamp = (value) => value === \"static\" ? value : Math.max(value ?? 1e3, 1e3);\n    const originalStaleTime = defaultedOptions.staleTime;\n    defaultedOptions.staleTime = typeof originalStaleTime === \"function\" ? (...args) => clamp(originalStaleTime(...args)) : clamp(originalStaleTime);\n    if (typeof defaultedOptions.gcTime === \"number\") {\n      defaultedOptions.gcTime = Math.max(defaultedOptions.gcTime, 1e3);\n    }\n  }\n};\nvar willFetch = (result, isRestoring) => result.isLoading && result.isFetching && !isRestoring;\nvar shouldSuspend = (defaultedOptions, result) => defaultedOptions?.suspense && result.isPending;\nvar fetchOptimistic = (defaultedOptions, observer, errorResetBoundary) => observer.fetchOptimistic(defaultedOptions).catch(() => {\n  errorResetBoundary.clearReset();\n});\nexport {\n  defaultThrowOnError,\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n};\n//# sourceMappingURL=suspense.js.map","\"use client\";\n\n// src/useQueries.ts\nimport * as React from \"react\";\nimport {\n  QueriesObserver,\n  QueryObserver,\n  noop,\n  notifyManager\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useQueries({\n  queries,\n  ...options\n}, queryClient) {\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedQueries = React.useMemo(\n    () => queries.map((opts) => {\n      const defaultedOptions = client.defaultQueryOptions(\n        opts\n      );\n      defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n      return defaultedOptions;\n    }),\n    [queries, client, isRestoring]\n  );\n  defaultedQueries.forEach((query) => {\n    ensureSuspenseTimers(query);\n    ensurePreventErrorBoundaryRetry(query, errorResetBoundary);\n  });\n  useClearResetErrorBoundary(errorResetBoundary);\n  const [observer] = React.useState(\n    () => new QueriesObserver(\n      client,\n      defaultedQueries,\n      options\n    )\n  );\n  const [optimisticResult, getCombinedResult, trackResult] = observer.getOptimisticResult(\n    defaultedQueries,\n    options.combine\n  );\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop,\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setQueries(\n      defaultedQueries,\n      options\n    );\n  }, [defaultedQueries, options, observer]);\n  const shouldAtLeastOneSuspend = optimisticResult.some(\n    (result, index) => shouldSuspend(defaultedQueries[index], result)\n  );\n  const suspensePromises = shouldAtLeastOneSuspend ? optimisticResult.flatMap((result, index) => {\n    const opts = defaultedQueries[index];\n    if (opts) {\n      const queryObserver = new QueryObserver(client, opts);\n      if (shouldSuspend(opts, result)) {\n        return fetchOptimistic(opts, queryObserver, errorResetBoundary);\n      } else if (willFetch(result, isRestoring)) {\n        void fetchOptimistic(opts, queryObserver, errorResetBoundary);\n      }\n    }\n    return [];\n  }) : [];\n  if (suspensePromises.length > 0) {\n    throw Promise.all(suspensePromises);\n  }\n  const firstSingleResultWhichShouldThrow = optimisticResult.find(\n    (result, index) => {\n      const query = defaultedQueries[index];\n      return query && getHasError({\n        result,\n        errorResetBoundary,\n        throwOnError: query.throwOnError,\n        query: client.getQueryCache().get(query.queryHash),\n        suspense: query.suspense\n      });\n    }\n  );\n  if (firstSingleResultWhichShouldThrow?.error) {\n    throw firstSingleResultWhichShouldThrow.error;\n  }\n  return getCombinedResult(trackResult());\n}\nexport {\n  useQueries\n};\n//# sourceMappingURL=useQueries.js.map","\"use client\";\n\n// src/useBaseQuery.ts\nimport * as React from \"react\";\nimport { isServer, noop, notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nimport { useQueryErrorResetBoundary } from \"./QueryErrorResetBoundary.js\";\nimport {\n  ensurePreventErrorBoundaryRetry,\n  getHasError,\n  useClearResetErrorBoundary\n} from \"./errorBoundaryUtils.js\";\nimport { useIsRestoring } from \"./IsRestoringProvider.js\";\nimport {\n  ensureSuspenseTimers,\n  fetchOptimistic,\n  shouldSuspend,\n  willFetch\n} from \"./suspense.js\";\nfunction useBaseQuery(options, Observer, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof options !== \"object\" || Array.isArray(options)) {\n      throw new Error(\n        'Bad argument type. Starting with v5, only the \"Object\" form is allowed when calling query related functions. Please use the error stack to find the culprit call. More info here: https://tanstack.com/query/latest/docs/react/guides/migrating-to-v5#supports-a-single-signature-one-object'\n      );\n    }\n  }\n  const client = useQueryClient(queryClient);\n  const isRestoring = useIsRestoring();\n  const errorResetBoundary = useQueryErrorResetBoundary();\n  const defaultedOptions = client.defaultQueryOptions(options);\n  client.getDefaultOptions().queries?._experimental_beforeQuery?.(\n    defaultedOptions\n  );\n  if (process.env.NODE_ENV !== \"production\") {\n    if (!defaultedOptions.queryFn) {\n      console.error(\n        `[${defaultedOptions.queryHash}]: No queryFn was passed as an option, and no default queryFn was found. The queryFn parameter is only optional when using a default queryFn. More info here: https://tanstack.com/query/latest/docs/framework/react/guides/default-query-function`\n      );\n    }\n  }\n  defaultedOptions._optimisticResults = isRestoring ? \"isRestoring\" : \"optimistic\";\n  ensureSuspenseTimers(defaultedOptions);\n  ensurePreventErrorBoundaryRetry(defaultedOptions, errorResetBoundary);\n  useClearResetErrorBoundary(errorResetBoundary);\n  const isNewCacheEntry = !client.getQueryCache().get(defaultedOptions.queryHash);\n  const [observer] = React.useState(\n    () => new Observer(\n      client,\n      defaultedOptions\n    )\n  );\n  const result = observer.getOptimisticResult(defaultedOptions);\n  const shouldSubscribe = !isRestoring && options.subscribed !== false;\n  React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => {\n        const unsubscribe = shouldSubscribe ? observer.subscribe(notifyManager.batchCalls(onStoreChange)) : noop;\n        observer.updateResult();\n        return unsubscribe;\n      },\n      [observer, shouldSubscribe]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  React.useEffect(() => {\n    observer.setOptions(defaultedOptions);\n  }, [defaultedOptions, observer]);\n  if (shouldSuspend(defaultedOptions, result)) {\n    throw fetchOptimistic(defaultedOptions, observer, errorResetBoundary);\n  }\n  if (getHasError({\n    result,\n    errorResetBoundary,\n    throwOnError: defaultedOptions.throwOnError,\n    query: client.getQueryCache().get(defaultedOptions.queryHash),\n    suspense: defaultedOptions.suspense\n  })) {\n    throw result.error;\n  }\n  ;\n  client.getDefaultOptions().queries?._experimental_afterQuery?.(\n    defaultedOptions,\n    result\n  );\n  if (defaultedOptions.experimental_prefetchInRender && !isServer && willFetch(result, isRestoring)) {\n    const promise = isNewCacheEntry ? (\n      // Fetch immediately on render in order to ensure `.promise` is resolved even if the component is unmounted\n      fetchOptimistic(defaultedOptions, observer, errorResetBoundary)\n    ) : (\n      // subscribe to the \"cache promise\" so that we can finalize the currentThenable once data comes in\n      client.getQueryCache().get(defaultedOptions.queryHash)?.promise\n    );\n    promise?.catch(noop).finally(() => {\n      observer.updateResult();\n    });\n  }\n  return !defaultedOptions.notifyOnChangeProps ? observer.trackResult(result) : result;\n}\nexport {\n  useBaseQuery\n};\n//# sourceMappingURL=useBaseQuery.js.map","\"use client\";\n\n// src/useQuery.ts\nimport { QueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useQuery(options, queryClient) {\n  return useBaseQuery(options, QueryObserver, queryClient);\n}\nexport {\n  useQuery\n};\n//# sourceMappingURL=useQuery.js.map","\"use client\";\n\n// src/useSuspenseQuery.ts\nimport { QueryObserver, skipToken } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\nfunction useSuspenseQuery(options, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\"skipToken is not allowed for useSuspenseQuery\");\n    }\n  }\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError,\n      placeholderData: void 0\n    },\n    QueryObserver,\n    queryClient\n  );\n}\nexport {\n  useSuspenseQuery\n};\n//# sourceMappingURL=useSuspenseQuery.js.map","\"use client\";\n\n// src/useSuspenseInfiniteQuery.ts\nimport { InfiniteQueryObserver, skipToken } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\nfunction useSuspenseInfiniteQuery(options, queryClient) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\"skipToken is not allowed for useSuspenseInfiniteQuery\");\n    }\n  }\n  return useBaseQuery(\n    {\n      ...options,\n      enabled: true,\n      suspense: true,\n      throwOnError: defaultThrowOnError\n    },\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useSuspenseInfiniteQuery\n};\n//# sourceMappingURL=useSuspenseInfiniteQuery.js.map","\"use client\";\n\n// src/useSuspenseQueries.ts\nimport { skipToken } from \"@tanstack/query-core\";\nimport { useQueries } from \"./useQueries.js\";\nimport { defaultThrowOnError } from \"./suspense.js\";\nfunction useSuspenseQueries(options, queryClient) {\n  return useQueries(\n    {\n      ...options,\n      queries: options.queries.map((query) => {\n        if (process.env.NODE_ENV !== \"production\") {\n          if (query.queryFn === skipToken) {\n            console.error(\"skipToken is not allowed for useSuspenseQueries\");\n          }\n        }\n        return {\n          ...query,\n          suspense: true,\n          throwOnError: defaultThrowOnError,\n          enabled: true,\n          placeholderData: void 0\n        };\n      })\n    },\n    queryClient\n  );\n}\nexport {\n  useSuspenseQueries\n};\n//# sourceMappingURL=useSuspenseQueries.js.map","// src/usePrefetchQuery.tsx\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction usePrefetchQuery(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchQuery(options);\n  }\n}\nexport {\n  usePrefetchQuery\n};\n//# sourceMappingURL=usePrefetchQuery.js.map","// src/usePrefetchInfiniteQuery.tsx\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction usePrefetchInfiniteQuery(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  if (!client.getQueryState(options.queryKey)) {\n    client.prefetchInfiniteQuery(options);\n  }\n}\nexport {\n  usePrefetchInfiniteQuery\n};\n//# sourceMappingURL=usePrefetchInfiniteQuery.js.map","// src/queryOptions.ts\nfunction queryOptions(options) {\n  return options;\n}\nexport {\n  queryOptions\n};\n//# sourceMappingURL=queryOptions.js.map","// src/infiniteQueryOptions.ts\nfunction infiniteQueryOptions(options) {\n  return options;\n}\nexport {\n  infiniteQueryOptions\n};\n//# sourceMappingURL=infiniteQueryOptions.js.map","\"use client\";\n\n// src/HydrationBoundary.tsx\nimport * as React from \"react\";\nimport { hydrate } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nvar HydrationBoundary = ({\n  children,\n  options = {},\n  state,\n  queryClient\n}) => {\n  const client = useQueryClient(queryClient);\n  const [hydrationQueue, setHydrationQueue] = React.useState();\n  const optionsRef = React.useRef(options);\n  optionsRef.current = options;\n  React.useMemo(() => {\n    if (state) {\n      if (typeof state !== \"object\") {\n        return;\n      }\n      const queryCache = client.getQueryCache();\n      const queries = state.queries || [];\n      const newQueries = [];\n      const existingQueries = [];\n      for (const dehydratedQuery of queries) {\n        const existingQuery = queryCache.get(dehydratedQuery.queryHash);\n        if (!existingQuery) {\n          newQueries.push(dehydratedQuery);\n        } else {\n          const hydrationIsNewer = dehydratedQuery.state.dataUpdatedAt > existingQuery.state.dataUpdatedAt || dehydratedQuery.promise && existingQuery.state.status !== \"pending\" && existingQuery.state.fetchStatus !== \"fetching\" && dehydratedQuery.dehydratedAt !== void 0 && dehydratedQuery.dehydratedAt > existingQuery.state.dataUpdatedAt;\n          const queryAlreadyQueued = hydrationQueue?.find(\n            (query) => query.queryHash === dehydratedQuery.queryHash\n          );\n          if (hydrationIsNewer && (!queryAlreadyQueued || dehydratedQuery.state.dataUpdatedAt > queryAlreadyQueued.state.dataUpdatedAt)) {\n            existingQueries.push(dehydratedQuery);\n          }\n        }\n      }\n      if (newQueries.length > 0) {\n        hydrate(client, { queries: newQueries }, optionsRef.current);\n      }\n      if (existingQueries.length > 0) {\n        setHydrationQueue(\n          (prev) => prev ? [...prev, ...existingQueries] : existingQueries\n        );\n      }\n    }\n  }, [client, hydrationQueue, state]);\n  React.useEffect(() => {\n    if (hydrationQueue) {\n      hydrate(client, { queries: hydrationQueue }, optionsRef.current);\n      setHydrationQueue(void 0);\n    }\n  }, [client, hydrationQueue]);\n  return children;\n};\nexport {\n  HydrationBoundary\n};\n//# sourceMappingURL=HydrationBoundary.js.map","\"use client\";\n\n// src/useIsFetching.ts\nimport * as React from \"react\";\nimport { notifyManager } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsFetching(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  const queryCache = client.getQueryCache();\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => queryCache.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [queryCache]\n    ),\n    () => client.isFetching(filters),\n    () => client.isFetching(filters)\n  );\n}\nexport {\n  useIsFetching\n};\n//# sourceMappingURL=useIsFetching.js.map","\"use client\";\n\n// src/useMutationState.ts\nimport * as React from \"react\";\nimport { notifyManager, replaceEqualDeep } from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useIsMutating(filters, queryClient) {\n  const client = useQueryClient(queryClient);\n  return useMutationState(\n    { filters: { ...filters, status: \"pending\" } },\n    client\n  ).length;\n}\nfunction getResult(mutationCache, options) {\n  return mutationCache.findAll(options.filters).map(\n    (mutation) => options.select ? options.select(mutation) : mutation.state\n  );\n}\nfunction useMutationState(options = {}, queryClient) {\n  const mutationCache = useQueryClient(queryClient).getMutationCache();\n  const optionsRef = React.useRef(options);\n  const result = React.useRef(null);\n  if (!result.current) {\n    result.current = getResult(mutationCache, options);\n  }\n  React.useEffect(() => {\n    optionsRef.current = options;\n  });\n  return React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => mutationCache.subscribe(() => {\n        const nextResult = replaceEqualDeep(\n          result.current,\n          getResult(mutationCache, optionsRef.current)\n        );\n        if (result.current !== nextResult) {\n          result.current = nextResult;\n          notifyManager.schedule(onStoreChange);\n        }\n      }),\n      [mutationCache]\n    ),\n    () => result.current,\n    () => result.current\n  );\n}\nexport {\n  useIsMutating,\n  useMutationState\n};\n//# sourceMappingURL=useMutationState.js.map","\"use client\";\n\n// src/useMutation.ts\nimport * as React from \"react\";\nimport {\n  MutationObserver,\n  noop,\n  notifyManager,\n  shouldThrowError\n} from \"@tanstack/query-core\";\nimport { useQueryClient } from \"./QueryClientProvider.js\";\nfunction useMutation(options, queryClient) {\n  const client = useQueryClient(queryClient);\n  const [observer] = React.useState(\n    () => new MutationObserver(\n      client,\n      options\n    )\n  );\n  React.useEffect(() => {\n    observer.setOptions(options);\n  }, [observer, options]);\n  const result = React.useSyncExternalStore(\n    React.useCallback(\n      (onStoreChange) => observer.subscribe(notifyManager.batchCalls(onStoreChange)),\n      [observer]\n    ),\n    () => observer.getCurrentResult(),\n    () => observer.getCurrentResult()\n  );\n  const mutate = React.useCallback(\n    (variables, mutateOptions) => {\n      observer.mutate(variables, mutateOptions).catch(noop);\n    },\n    [observer]\n  );\n  if (result.error && shouldThrowError(observer.options.throwOnError, [result.error])) {\n    throw result.error;\n  }\n  return { ...result, mutate, mutateAsync: result.mutate };\n}\nexport {\n  useMutation\n};\n//# sourceMappingURL=useMutation.js.map","\"use client\";\n\n// src/useInfiniteQuery.ts\nimport { InfiniteQueryObserver } from \"@tanstack/query-core\";\nimport { useBaseQuery } from \"./useBaseQuery.js\";\nfunction useInfiniteQuery(options, queryClient) {\n  return useBaseQuery(\n    options,\n    InfiniteQueryObserver,\n    queryClient\n  );\n}\nexport {\n  useInfiniteQuery\n};\n//# sourceMappingURL=useInfiniteQuery.js.map"],"x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40],"mappings":"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"}